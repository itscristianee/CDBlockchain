/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CurriculumDigital.GUI;

import CurriculumDigital.Core.Evento;
import CurriculumDigital.Core.User;
import blockchain.utils.Block;
import blockchain.utils.BlockChain;
import blockchain.utils.MerkleTree;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author cristiane
 */
public class FormCurriculum extends javax.swing.JFrame {

    BlockChain bloco;
    User myUser = null;
    MerkleTree mt;
    // Lista de eventos que é mantida durante a execução
    private List<Evento> lstEventos;
    private List<Evento> lstBuffer;
    private DefaultListModel listModel;
    String nome;

    /**
     * Creates new form NewJFrame
     */
    public FormCurriculum() {
        initComponents();
        bloco = new BlockChain();
        mt = new MerkleTree();
        lstBuffer = new ArrayList<>();
        lstEventos = new ArrayList<>();
        listModel = new DefaultListModel();
        jPAdd.setVisible(true);
        jPVerProva.setVisible(false);
        jPPessoas.setVisible(false);
        // Centralizar o formulário na tela
        setLocationRelativeTo(null);
    }

    public FormCurriculum(User u) {
        this();
        this.myUser = u;
        this.entidadeField.setText(u.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btAdicionar = new javax.swing.JButton();
        btPessoas = new javax.swing.JButton();
        btAcerca2 = new javax.swing.JButton();
        btVerProva = new javax.swing.JButton();
        jPAdd = new javax.swing.JPanel();
        nomePessoaField = new javax.swing.JTextField();
        descricaoEventoField = new javax.swing.JTextField();
        entidadeField = new javax.swing.JTextField();
        spNovoBlockDificuldade = new javax.swing.JSpinner();
        addEventoButton = new javax.swing.JButton();
        btnGerarBloco = new javax.swing.JButton();
        txtFileName = new javax.swing.JTextField();
        btLoad = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtEventos = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPVerProva = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstBlockchain = new javax.swing.JList<>();
        merkleGraphics1 = new blockchain.GUI.MerkleGraphics();
        jPPessoas = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstPessoas = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtCurriculums = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());

        jPanel5.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.hoverBorderColor"));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Trattatello", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Curriculum Digital");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 23, 165, 37));

        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarjButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(btAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 78, 140, 58));

        btPessoas.setText("Pessoas");
        btPessoas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPessoasActionPerformed(evt);
            }
        });
        jPanel5.add(btPessoas, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 170, 140, 58));

        btAcerca2.setText("Acerca");
        btAcerca2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAcerca2btAcercaActionPerformed(evt);
            }
        });
        jPanel5.add(btAcerca2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 352, 140, 58));

        btVerProva.setText("Ver Prova");
        btVerProva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerProvaActionPerformed(evt);
            }
        });
        jPanel5.add(btVerProva, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 260, 140, 58));

        jPAdd.setBackground(new java.awt.Color(255, 255, 255));
        jPAdd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nomePessoaField.setToolTipText("");
        nomePessoaField.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome da Pessoa"));
        nomePessoaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomePessoaFieldActionPerformed(evt);
            }
        });
        jPAdd.add(nomePessoaField, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 238, -1));

        descricaoEventoField.setToolTipText("");
        descricaoEventoField.setBorder(javax.swing.BorderFactory.createTitledBorder("Descrição do Evento"));
        descricaoEventoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descricaoEventoFieldActionPerformed(evt);
            }
        });
        jPAdd.add(descricaoEventoField, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 65, 238, -1));

        entidadeField.setEditable(false);
        entidadeField.setToolTipText("");
        entidadeField.setBorder(javax.swing.BorderFactory.createTitledBorder("Entidade Certificadora"));
        entidadeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entidadeFieldActionPerformed(evt);
            }
        });
        jPAdd.add(entidadeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 124, 238, -1));

        spNovoBlockDificuldade.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        spNovoBlockDificuldade.setModel(new javax.swing.SpinnerNumberModel(3, 1, 7, 1));
        spNovoBlockDificuldade.setBorder(javax.swing.BorderFactory.createTitledBorder("Dificulty"));
        jPAdd.add(spNovoBlockDificuldade, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 183, 75, 55));

        addEventoButton.setText("Adicionar Evento(s)");
        addEventoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventoButtonActionPerformed(evt);
            }
        });
        jPAdd.add(addEventoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 183, 151, 55));

        btnGerarBloco.setText("Gerar Bloco");
        btnGerarBloco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarBlocoActionPerformed(evt);
            }
        });
        jPAdd.add(btnGerarBloco, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 256, 238, 43));

        txtFileName.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        txtFileName.setText("./blockchain.obj");
        txtFileName.setBorder(javax.swing.BorderFactory.createTitledBorder("File Name"));
        txtFileName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFileNameKeyTyped(evt);
            }
        });
        jPAdd.add(txtFileName, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 317, 238, -1));

        btLoad.setText("Load");
        btLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLoadActionPerformed(evt);
            }
        });
        jPAdd.add(btLoad, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 376, 111, 51));

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });
        jPAdd.add(btSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 376, 111, 51));

        txtEventos.setEditable(false);
        txtEventos.setColumns(20);
        txtEventos.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtEventos.setRows(5);
        txtEventos.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de eventos"));
        txtEventos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEventosKeyTyped(evt);
            }
        });
        jScrollPane6.setViewportView(txtEventos);

        jPAdd.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 16, 330, 410));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nome da pessoa | Descrição | Entidade");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPAdd.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 330, -1));

        jPVerProva.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstBlockchain.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstBlockchainValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstBlockchain);

        jPVerProva.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 200, 390));

        javax.swing.GroupLayout merkleGraphics1Layout = new javax.swing.GroupLayout(merkleGraphics1);
        merkleGraphics1.setLayout(merkleGraphics1Layout);
        merkleGraphics1Layout.setHorizontalGroup(
            merkleGraphics1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );
        merkleGraphics1Layout.setVerticalGroup(
            merkleGraphics1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );

        jPVerProva.add(merkleGraphics1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 370, 390));

        jPPessoas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstPessoas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPessoasValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstPessoas);

        jPPessoas.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 190, 370));

        txtCurriculums.setEditable(false);
        txtCurriculums.setColumns(20);
        txtCurriculums.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtCurriculums.setRows(5);
        txtCurriculums.setBorder(javax.swing.BorderFactory.createTitledBorder("Curriculums"));
        txtCurriculums.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCurriculumsKeyTyped(evt);
            }
        });
        jScrollPane7.setViewportView(txtCurriculums);

        jPPessoas.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 10, 360, 240));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(164, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPVerProva, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(170, Short.MAX_VALUE)
                    .addComponent(jPPessoas, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(378, 378, 378))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPVerProva, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPPessoas, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAdicionarjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarjButton1ActionPerformed
        // TODO add your handling code here:
        jPAdd.setVisible(true);
        jPPessoas.setVisible(false);
        jPVerProva.setVisible(false);

    }//GEN-LAST:event_btAdicionarjButton1ActionPerformed

    private void btAcerca2btAcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAcerca2btAcercaActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        // Mostra uma janela de diálogo com as informações dos membros do grupo
        JOptionPane.showMessageDialog(this,
                "Trabalho desenvolvido por:\n Cristiane Mayabanza - 24639  \n Joao Campos - 25269 ",
                "Acerca de...",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btAcerca2btAcercaActionPerformed

    private void nomePessoaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomePessoaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomePessoaFieldActionPerformed

    private void descricaoEventoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descricaoEventoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descricaoEventoFieldActionPerformed

    private void entidadeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entidadeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entidadeFieldActionPerformed

    private void addEventoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventoButtonActionPerformed
        // TODO add your handling code here:
        String nomePessoa = nomePessoaField.getText();
        String descricao = descricaoEventoField.getText();
        String entidade = entidadeField.getText();
        if (!nomePessoa.isEmpty() && !descricao.isEmpty() && !entidade.isEmpty()) {
            // Criar o evento
            Evento evento = new Evento(nomePessoa, descricao, entidade);

            // Adicionar o nome da pessoa ao DefaultListModel existente
            if (!listModel.contains(nomePessoa)) {
                listModel.addElement(nomePessoa);
                lstPessoas.setModel(listModel);  // Associar o modelo à JList
            }
            lstBuffer.add(evento);
            lstEventos.add(evento);
            // Formatar o evento como string e adicionar ao campo de texto para visualização
            txtEventos.append(evento.toString() + "\n");
            // Limpar os campos de texto
            nomePessoaField.setText("");
            descricaoEventoField.setText("");

        } else {
            JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos.");
        }
    }//GEN-LAST:event_addEventoButtonActionPerformed

    private void btnGerarBlocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarBlocoActionPerformed
        // TODO add your handling code here:
        try {

            // Cria a Merkle Tree para os elementos adicionados
            mt = new MerkleTree(lstBuffer);

            merkleGraphics1.setMerkle(mt);

            bloco.add(mt.getRoot(), (int) spNovoBlockDificuldade.getValue());

            // Salva a Merkle Tree em um arquivo (mantém esta funcionalidade)
            mt.saveToFile(bloco.getLastBlockHash() + ".mkt");

            // Atualiza a lista gráfica de blocos
            DefaultListModel model = new DefaultListModel();
            for (Block elem : bloco.getChain()) {
                model.addElement(elem);
            }

            lstBlockchain.setModel(model);
            JOptionPane.showMessageDialog(this, "Novo bloco gerado!"); // Corrigido o showMessageDialog

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(FormAntigo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGerarBlocoActionPerformed

    private void txtFileNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFileNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFileNameKeyTyped

    private void btLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLoadActionPerformed
        // Selecionar arquivo através do JFileChooser
        JFileChooser fc = new JFileChooser(new File(txtFileName.getText()));
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                // Carregar a blockchain a partir do arquivo selecionado
                bloco.load(fc.getSelectedFile().getAbsolutePath());

                txtFileName.setText(fc.getSelectedFile().getAbsolutePath());

                // Limpar o campo de texto `txtEventos` para garantir que ele esteja vazio antes de listar os eventos
                txtEventos.setText("");

                // Atualizar a lista gráfica de blocos
                DefaultListModel model = new DefaultListModel();

                lstEventos.clear();
                Set<String> eventosAdicionados = new HashSet<>();

                for (Block b : bloco.getChain()) {
                    // Adicionar o bloco ao modelo da lista gráfica
                    model.addElement(b);
                    // Carregar a Merkle Tree a partir do arquivo associado ao bloco
                    MerkleTree mt = MerkleTree.loadFromFile(b.calculateHash() + ".mkt");

                    // Adicionar cada evento individualmente ao campo txtEventos e extrair os nomes
                    for (Object obj : mt.getElements()) {
                        String eventoStr = (String) obj;  // Tratar o evento como String
                        String[] partes = eventoStr.split(" \\| ");
                        if (partes.length == 3) {
                            String nomePessoa = partes[0].trim();
                            String descricao = partes[1].trim();
                            String entidade = partes[2].trim();

                            // Criar um novo objeto Evento
                            Evento evento = new Evento(nomePessoa, descricao, entidade);
                            lstEventos.add(evento);
                            // Verificar se o evento já foi adicionado ao txtEventos
                            if (!eventosAdicionados.contains(evento.toString())) {
                                // Adicionar ao campo txtEventos
                                txtEventos.append(evento.toString() + "\n");

                                // Marcar o evento como adicionado
                                eventosAdicionados.add(evento.toString());

                                // Adicionar o nome da pessoa ao modelo da JList (evitar duplicatas)
                                if (!listModel.contains(evento.getNomePessoa())) {
                                    listModel.addElement(evento.getNomePessoa());
                                }
                            }
                        }
                    }

                }
                // Atualizar o modelo da lista gráfica da blockchain
                lstBlockchain.setModel(model);
                // Atualizar a JList de nomes
                lstPessoas.setModel(listModel);  // Associa o modelo de nomes à JList de pessoas

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Logger.getLogger(FormAntigo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btLoadActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser(new File("."));

        if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                bloco.save(fc.getSelectedFile().getAbsolutePath());
                txtFileName.setText(fc.getSelectedFile().getAbsolutePath());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                Logger.getLogger(FormAntigo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btSaveActionPerformed

    private void txtEventosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEventosKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEventosKeyTyped

    private void btPessoasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPessoasActionPerformed
        // TODO add your handling code here:
        jPPessoas.setVisible(true);
        jPVerProva.setVisible(false);
        jPAdd.setVisible(false);
    }//GEN-LAST:event_btPessoasActionPerformed

    private void btVerProvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerProvaActionPerformed
        // TODO add your handling code here:

        jPVerProva.setVisible(true);
        jPPessoas.setVisible(false);
        jPAdd.setVisible(false);
    }//GEN-LAST:event_btVerProvaActionPerformed

    private void lstBlockchainValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstBlockchainValueChanged
        // TODO add your handling code here:
        try {
            Block b = (Block) lstBlockchain.getSelectedValues()[0];
            MerkleTree mt = MerkleTree.loadFromFile(b.calculateHash() + ".mkt");
            //txtNovoBloco.setText(mt.getElementsString());
            merkleGraphics1.setMerkle(mt);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(FormAntigo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lstBlockchainValueChanged

    private void lstPessoasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPessoasValueChanged
        // TODO add your handling code here:
        // Capturar a pessoa selecionada
        String pessoaSelecionada = lstPessoas.getSelectedValue();

        if (pessoaSelecionada != null) {
            // Limpar o campo de eventos antes de exibir os eventos filtrados
            txtCurriculums.setText("");

            // Percorrer a lista de eventos e exibir apenas os eventos da pessoa selecionada
            for (Evento evento : lstEventos) {
                if (evento.getNomePessoa().equals(pessoaSelecionada)) {
                    // Adicionar o evento ao txtEventos
                    txtCurriculums.append(evento.toString() + "\n");
                }
            }
        }
    }//GEN-LAST:event_lstPessoasValueChanged

    private void txtCurriculumsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCurriculumsKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurriculumsKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCurriculum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCurriculum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCurriculum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCurriculum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCurriculum().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEventoButton;
    private javax.swing.JButton btAcerca2;
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btLoad;
    private javax.swing.JButton btPessoas;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btVerProva;
    private javax.swing.JButton btnGerarBloco;
    private javax.swing.JTextField descricaoEventoField;
    private javax.swing.JTextField entidadeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPAdd;
    private javax.swing.JPanel jPPessoas;
    private javax.swing.JPanel jPVerProva;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JList<String> lstBlockchain;
    private javax.swing.JList<String> lstPessoas;
    private blockchain.GUI.MerkleGraphics merkleGraphics1;
    private javax.swing.JTextField nomePessoaField;
    private javax.swing.JSpinner spNovoBlockDificuldade;
    private javax.swing.JTextArea txtCurriculums;
    private javax.swing.JTextArea txtEventos;
    private javax.swing.JTextField txtFileName;
    // End of variables declaration//GEN-END:variables
}
