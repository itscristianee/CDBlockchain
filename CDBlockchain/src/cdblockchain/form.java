/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cdblockchain;

import blockchain.utils.Block;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import blockchain.utils.BlockChain; // Importando Evento
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;

/**
 *
 * @author cristiane
 */
public class form extends javax.swing.JFrame {

    private GestorEventos sistema;
    private BlockChain blockchain;

    /**
     * Creates new form form
     */
    public form() {
        sistema = new GestorEventos(); // Inicializa a variável sistema
        blockchain = new BlockChain(); // Inicialize a variável blockchain
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listArea = new javax.swing.JTextArea();
        nomeField = new javax.swing.JTextField();
        descricaoField = new javax.swing.JTextField();
        entidadeField = new javax.swing.JTextField();
        adicionarEventoBtn = new javax.swing.JButton();
        listarEventosBtn = new javax.swing.JButton();
        salvarBtn = new javax.swing.JButton();
        carregarBtn = new javax.swing.JButton();
        listarNomesBtn = new javax.swing.JButton();
        listarCurriculoBtn = new javax.swing.JButton();
        limparBtn = new javax.swing.JButton();
        listarProvaBtn = new javax.swing.JButton();
        acercaDeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome da Pessoa:");

        jLabel2.setText("Descrição do Evento:");

        jLabel3.setText("Entidade Certificadora:");

        listArea.setColumns(20);
        listArea.setRows(5);
        jScrollPane1.setViewportView(listArea);

        adicionarEventoBtn.setText("Adicionar Evento");
        adicionarEventoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarEventoBtnActionPerformed(evt);
            }
        });

        listarEventosBtn.setText("Listar Eventos");
        listarEventosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarEventosBtnActionPerformed(evt);
            }
        });

        salvarBtn.setText("Salvar em Ficheiro");
        salvarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarBtnActionPerformed(evt);
            }
        });

        carregarBtn.setText("Carregar Ficheiro");
        carregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarBtnActionPerformed(evt);
            }
        });

        listarNomesBtn.setText("Listar Pessoas");
        listarNomesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarNomesBtnActionPerformed(evt);
            }
        });

        listarCurriculoBtn.setText("Listar Currículo");
        listarCurriculoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarCurriculoBtnActionPerformed(evt);
            }
        });

        limparBtn.setText("Limpar Ficheiro");
        limparBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparBtnActionPerformed(evt);
            }
        });

        listarProvaBtn.setText("Listar Prova");
        listarProvaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarProvaBtnActionPerformed(evt);
            }
        });

        acercaDeBtn.setText("Acerca de...");
        acercaDeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaDeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(listarNomesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(listarEventosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(listarCurriculoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(listarProvaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(carregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(salvarBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(limparBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(adicionarEventoBtn)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(entidadeField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(descricaoField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(27, 27, 27)
                                    .addComponent(nomeField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(acercaDeBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acercaDeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel1))
                            .addComponent(nomeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel2))
                            .addComponent(descricaoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel3))
                            .addComponent(entidadeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listarNomesBtn)
                    .addComponent(listarEventosBtn)
                    .addComponent(listarCurriculoBtn)
                    .addComponent(listarProvaBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carregarBtn)
                    .addComponent(salvarBtn)
                    .addComponent(limparBtn)
                    .addComponent(adicionarEventoBtn))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listarNomesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarNomesBtnActionPerformed
        // TODO add your handling code here:
        // Usamos um Set para evitar nomes duplicados
        Set<String> nomesPessoas = new HashSet<>();

        // Percorre todos os blocos na blockchain
        for (Block bloco : blockchain.getChain()) {
            // Percorre todos os eventos em cada bloco
            for (Evento evento : bloco.getEventos()) {
                nomesPessoas.add(evento.getNomePessoa()); // Adiciona os nomes ao Set
            }
        }

        // Exibe os nomes na área de texto
        listArea.setText("Pessoas Registradas:\n");
        for (String nome : nomesPessoas) {
            listArea.append(nome + "\n");
        }
    }//GEN-LAST:event_listarNomesBtnActionPerformed

    private void adicionarEventoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarEventoBtnActionPerformed
        // TODO add your handling code here:
        String nomePessoa = nomeField.getText();
        String descricao = descricaoField.getText();
        String entidade = entidadeField.getText();

        if (!nomePessoa.isEmpty() && !descricao.isEmpty() && !entidade.isEmpty()) {
            Evento evento = new Evento(nomePessoa, descricao, entidade);
            // Cria uma lista de eventos para adicionar ao bloco
            List<Evento> eventos = new ArrayList<>();
            eventos.add(evento);
            // Adiciona à blockchain 
            blockchain.addBlock(eventos, 1);
            JOptionPane.showMessageDialog(this, "Evento adicionado à blockchain com sucesso!");
            nomeField.setText("");
            descricaoField.setText("");
            entidadeField.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos.");
        }
    }//GEN-LAST:event_adicionarEventoBtnActionPerformed

    private void listarEventosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarEventosBtnActionPerformed
        // TODO add your handling code here:
        listArea.setText("");
        for (Block bloco : blockchain.getChain()) {
            listArea.append(bloco.toString() + "\n");
        }
    }//GEN-LAST:event_listarEventosBtnActionPerformed

    private void listarCurriculoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarCurriculoBtnActionPerformed
        // TODO add your handling code here:
        String nomePessoa = nomeField.getText();
        if (!nomePessoa.isEmpty()) {
            listArea.setText("Currículo de " + nomePessoa + ":\n");
            for (Block bloco : blockchain.getChain()) {
                for (Evento evento : bloco.getEventos()) {
                    if (evento.getNomePessoa().equalsIgnoreCase(nomePessoa)) {
                        listArea.append(evento.toString() + "\n");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, insira o nome da pessoa para listar o currículo.");
        }
    }//GEN-LAST:event_listarCurriculoBtnActionPerformed

    private void carregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarBtnActionPerformed
        // TODO add your handling code here:
        try {
            blockchain.load();
            JOptionPane.showMessageDialog(this, "Dados carregados com sucesso!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar os dados: " + ex.getMessage());
        }
    }//GEN-LAST:event_carregarBtnActionPerformed

    private void salvarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarBtnActionPerformed
        // TODO add your handling code here:
        try {
            blockchain.save();
            JOptionPane.showMessageDialog(this, "Blockchain salva com sucesso no ficheiro 'curriculos.txt'!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar a blockchain: " + ex.getMessage());
        }
    }//GEN-LAST:event_salvarBtnActionPerformed

    private void limparBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparBtnActionPerformed
        // TODO add your handling code here:
        try {
            sistema.limparArquivo();
            JOptionPane.showMessageDialog(this, "Arquivo 'curriculos.txt' limpo com sucesso!");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao limpar o arquivo: " + ex.getMessage());
        }

    }//GEN-LAST:event_limparBtnActionPerformed

    private void acercaDeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaDeBtnActionPerformed
        // TODO add your handling code here:
        // Mostra uma janela de diálogo com as informações dos membros do grupo
        JOptionPane.showMessageDialog(this,
                "Trabalho desenvolvido por:\n Cristiane Mayabanza - 24639  \n Joao ",
                "Acerca de...",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_acercaDeBtnActionPerformed

    private void listarProvaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarProvaBtnActionPerformed
        // TODO add your handling code here:
        String nomePessoa = nomeField.getText();
        if (!nomePessoa.isEmpty()) {
            listArea.setText("Prova dos eventos de " + nomePessoa + ":\n");
            for (Block bloco : blockchain.getChain()) {
                for (Evento evento : bloco.getEventos()) {
                    if (evento.getNomePessoa().equalsIgnoreCase(nomePessoa)) {
                        // Obtém a prova de Merkle para o evento
                        List<String> proof = bloco.getMerkleProof(evento);

                        // Exibe o evento
                        listArea.append("Evento: " + evento + "\n");

                        // Exibe a prova de Merkle
                        listArea.append("Prova de Merkle:\n");
                        for (String proofPart : proof) {
                            listArea.append(proofPart + "\n");
                        }
                        listArea.append("\n");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, insira o nome da pessoa para listar a prova dos eventos.");
        }


    }//GEN-LAST:event_listarProvaBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acercaDeBtn;
    private javax.swing.JButton adicionarEventoBtn;
    private javax.swing.JButton carregarBtn;
    private javax.swing.JTextField descricaoField;
    private javax.swing.JTextField entidadeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparBtn;
    private javax.swing.JTextArea listArea;
    private javax.swing.JButton listarCurriculoBtn;
    private javax.swing.JButton listarEventosBtn;
    private javax.swing.JButton listarNomesBtn;
    private javax.swing.JButton listarProvaBtn;
    private javax.swing.JTextField nomeField;
    private javax.swing.JButton salvarBtn;
    // End of variables declaration//GEN-END:variables
}
